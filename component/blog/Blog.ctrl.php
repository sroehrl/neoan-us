<?php
/* Generated by neoan3-cli */

namespace Neoan3\Components;

use BluaBlue\Client;
use League\CommonMark\CommonMarkConverter;
use League\CommonMark\Environment\Environment;
use League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension;
use League\CommonMark\Extension\Table\TableExtension;
use League\CommonMark\MarkdownConverter;
use Neoan3\Apps\Template;
use Neoan3\Core\Unicore;
use Neoan3\Frame\Neoan3;

class Blog extends Unicore
{
    private $view = 'blog';
    private $articles = [];

    function init()
    {
        $this->uni('neoan3')
            ->hook('footer', 'header')
            ->callback($this, 'loadContext')
            ->callback($this, 'modernize')
//            ->hook('main', $this->view, ['articles' => $this->articles])
            ->output();
    }

    function modernize(Neoan3 $context)
    {
        if (!$selected = sub(1)) {
            $selected = $this->articles[0]['slug'];
        }
        $featured = $this->findArticle($selected);
        $context->addHead('title', $featured['name']);
        $environment = new Environment(['html_input' => 'escape']);
        $environment->addExtension(new CommonMarkCoreExtension());
        $environment->addExtension(new TableExtension());
        $converter = new MarkdownConverter($environment);
        $content = '';
        foreach ($featured['article_content'] as $part) {
            if ($part['content_type'] == 'markdown') {
                $content .= $converter->convertToHtml($part['content'])->getContent();
            } else {
                $content .= $part['html'];
            }
        }

        $context->main = Template::embraceFromFile(
            'component/blog/blog.view.html',
            ['articles' => $this->articles, 'featured' => $featured, 'content' => $content, 'base' => base]
        );
    }

    private function findArticle($slug)
    {
        foreach ($this->articles as $article) {
            if ($article['slug'] == $slug) {
                return $article;
            }
        }
        return [];
    }

    function loadContext(Neoan3 $uni)
    {
        $storeLocation = __DIR__ . '/articles.json';
        if(file_exists($storeLocation) && filemtime($storeLocation) > (time() - 60*60) ){
            $this->articles = json_decode(file_get_contents($storeLocation),true);
        } else {
            $credentials = getCredentials()['neoan_us_blua_blue'];


            $client = new Client($credentials['public'], $credentials['private']);
            $client->authenticate();
            $articles = $client->getOwnArticles();

            uasort($articles, fn($a,$b)=> strtotime($a->getInsertDate()) < strtotime($b->getInsertDate()) ? 1 : -1);
            $images = $client->getImages();
            // only published
            foreach ($articles as $article) {
                if ($article->getPublishDate()) {
                    $store = $article->toArray();
                    $store['has_image'] = !!$article->getImageId();
                    if($article->getImageId()){
                        foreach ($images as $image){
                            if($image->getId() === $article->getImageId()){
                                $store['image'] = $image->toArray();
                            }
                        }

                    }

                    $this->articles[] = $store;
                }
            }
            file_put_contents($storeLocation, json_encode($this->articles));
        }

    }
}
