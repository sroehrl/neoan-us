<?php
/* Generated by neoan3-cli */

namespace Neoan3\Components;

use Neoan3\Apps\Ops;
use Neoan3\Core\Unicore;
use Neoan3\Frame\Neoan;
use Neoan3\Model\ArticleModel;

class Article extends Unicore {
    private $vueElements = ['login'];
    private $article;

    function init() {
        $this->uni('neoan')
             ->callback($this, 'vueElements')
             ->callback($this, 'getContext')
             ->hook('main', 'article',$this->article)
             ->output();
    }

    /**
     * @param Neoan $uni
     */
    function vueElements($uni) {
        foreach ($this->vueElements as $vueElement) {
            $uni->vueComponent($vueElement);
        }

    }
    function getContext(){
        if(!sub(1)){
            $this->notFound();
        }
        $article = ArticleModel::bySlug(sub(1));
        if(empty($article) || $article['is_public'] !== 1 || empty($article['publish_date'])){
            $this->notFound();
        }
        $article['renderedContent'] = '';
        foreach ($article['content'] as $content){
            $article['renderedContent'] .= $content['content'];
        }
        $this->article = $article;


    }
    private function notFound(){
        $no = new NotFound();
        $no->init();
        exit();
    }

}
